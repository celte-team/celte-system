FROM fedora:38 AS builder

ENV VCPKG_ROOT=/opt/vcpkg
ENV PATH=$PATH:$VCPKG_ROOT
ENV VCPKG_FORCE_SYSTEM_BINARIES=1
ENV CC=/usr/bin/gcc
ENV CXX=/usr/bin/g++

RUN dnf update -y && \
    dnf install -y \
    git \
    gcc \
    gcc-c++ \
    cmake \
    ninja-build \
    curl \
    unzip

RUN dnf install -y \
    zip \
    tar \
    pkgconfig \
    which \
    make \
    bash-completion \
    python3 \
    python3-pip \
    pacman \
    scons

# Additional dependencies
RUN dnf install -y \
    glib2-devel \
    libfl-devel \
    openssl \
    openssl-devel \
    perl \
    libcurl-devel \
    perl-IPC-Cmd \
    kernel-devel \
    librdkafka-devel \
    librdkafka \
    perl-FindBin \
    autoconf \
    automake \
    autoconf-archive \
    snapd \
    boost-devel \
    ansible

RUN git clone https://github.com/microsoft/vcpkg.git $VCPKG_ROOT && \
    cd $VCPKG_ROOT && \
    ./bootstrap-vcpkg.sh -useSystemBinaries

RUN pip3 install pyyaml

RUN dnf install -y godot

RUN dnf install -y perl perl-IPC-Cmd \
    autoconf automake autoconf-archive


RUN ls

COPY . /workdir

WORKDIR /workdir/system

# RUN ls ; cd /system  ; ls -la ; cmake --preset default -G Ninja ..
RUN rm -fr build ; mkdir build ; cd build ; cmake --preset default -G Ninja ..

# cd gdprojects/p1 ; make

# //////////////////////////////
# FROM alpine:latest

# COPY --from=builder /opt/vcpkg /opt/vcpkg
# COPY --from=builder /usr/bin/godot /usr/bin/godot
# COPY --from=builder /usr/bin/c++ /usr/bin/c++
# COPY --from=builder /usr/bin/gcc /usr/bin/gcc
# COPY --from=builder /usr/lib64 /usr/lib64
# COPY --from=builder /lib64 /lib64

# ENV VCPKG_ROOT=/opt/vcpkg
# ENV PATH=$PATH:/opt/vcpkg
# ENV GODOT_PATH=/usr/bin/

# RUN apk add --no-cache \
#     libstdc++ \
#     libc6-compat \
#     openssl \
#     curl \
#     bash \
#     python3 \
#     scons

# CMD ["/bin/bash"]
