---
- name: Launch single node simulation
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Create build directory
      file:
        path: ../build
        state: directory

    - name: Run cmake
      command: cmake ..
      args:
        chdir: ../build

    - name: Build project
      command: make -j8
      args:
        chdir: ../build

    - name: Up kafka cluster
      command: docker-compose up -d
      args:
        chdir: ../kafka

    - name: Up SN
      command: ./tests/single_node_poc/test_server_single_node
      args:
        chdir: ../build
      async: 50
      poll: 0
      register: node_result

    - name: Up Client 1
      command: ./tests/single_node_poc/test_client_single_node
      args:
        chdir: ../build
      async: 50
      poll: 0
      register: client_1_result

    - name: Up Client 2
      command: ./tests/single_node_poc/test_client_single_node
      args:
        chdir: ../build
      async: 50
      poll: 0
      register: client_2_result

    - name: Wait for SN to finish
      async_status:
        jid: "{{ node_result.ansible_job_id }}"
      register: node_job_result
      until: node_job_result.finished
      retries: 30
      delay: 1

    - name: Wait for Client 1 to finish
      async_status:
        jid: "{{ client_1_result.ansible_job_id }}"
      register: client_1_job_result
      until: client_1_job_result.finished
      retries: 30
      delay: 1

    - name: Wait for Client 2 to finish
      async_status:
        jid: "{{ client_2_result.ansible_job_id }}"
      register: client_2_job_result
      until: client_2_job_result.finished
      retries: 30
      delay: 1

    - name: Show SN output
      debug:
        msg: "{{ node_job_result.stdout_lines }}"

    - name: Show Client 1 output
      debug:
        msg: "{{ client_1_job_result.stdout_lines }}"

    - name: Show Client 2 output
      debug:
        msg: "{{ client_2_job_result.stdout_lines }}"

    - name: Down kafka cluster
      command: docker-compose down
      args:
        chdir: ../kafka